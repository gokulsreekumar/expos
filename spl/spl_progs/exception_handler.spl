// -------- Mode Flag ---------------
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9] = -1;

// -------- Change Stack and Backup ----------------
alias userSP R0;
userSP = SP;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512-1;
backup;

// ------ Push EIP onto the Stack -------------------
multipush(EIP);

// ------ Exception Caused NOT by Page Fault ----------------
if(EC != 0) then
	print("------------------------");
	print "ExcptionOccured";
	print("EIP:");
	print(EIP);
	print("EC:");
	print(EC);
	print("EPN:");
	print(EPN);
	print("EMA:");
	print(EMA);
	print("------------------------");
    // Exit Process
    multipush(R0,R1);
	R1 = 3;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_1;
	multipop(R0,R1);

    // Scheduler
	call MOD_5;
endif;

// ------- Page Fault ---------------------------------------

if((EPN >= 4) && (EPN <= 7)) then
	// ------ Code Page Fault (calling Get Code Page) -------
	multipush(R0,R1);
	R1 = 5;
	R2 = [DISK_MAP_TABLE + [SYSTEM_STATUS_TABLE + 1]*10 + EPN];
	call MOD_2;
	[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + EPN*2] = R0;
	[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + EPN*2 + 1] = "1100";
	multipop(R0,R1);
	
else if((EPN == 2)||(EPN == 3)) then
	// ------- Heap Page Fault (calling Get Free Page) --------
	multipush(R0,R1);
	R1 = 1;
	call MOD_2;
	[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + EPN*2] = R0;
	[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + EPN*2 + 1] = "1110";
	multipop(R0,R1);
	multipush(R0,R1);
	R1 = 1;
	call MOD_2;
	[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + EPN*2 + 2] = R0;
	[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + EPN*2 + 3] = "1110";
	multipop(R0,R1);
	endif;
endif;

// --------- Pop EIP and Restore ------------
multipop(EIP);
restore;

// --------- Reset Mode Flag -----------------
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;

// ------ Restore userSP ----------------------
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
SP = SP + 1;
[SP] = EIP;

ireturn;
